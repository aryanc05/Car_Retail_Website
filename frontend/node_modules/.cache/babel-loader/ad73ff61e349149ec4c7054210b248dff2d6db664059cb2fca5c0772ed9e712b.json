{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { loginRequest } from \"./AuthRequests\";\nfunction getInitialAuthUserState() {\n  const authUserState = {\n    user: null,\n    isLoading: false,\n    error: \"\"\n  };\n  if (localStorage.getItem(\"user\")) {\n    authUserState.user = JSON.parse(localStorage.getItem(\"user\") || \"\");\n  }\n  return authUserState;\n}\nconst register = createAsyncThunk(\"user/register\", async registerDetails => {\n  return await registerRequest(registerDetails);\n});\nconst login = createAsyncThunk(\"user/login\", async loginDetails => {\n  return await loginRequest(loginDetails);\n});\nconst logout = createAsyncThunk(\"user/logout\", async (_, {\n  getState\n}) => {\n  const user = getState().auth.user;\n  if (!user) {\n    return Promise.reject(new Error(\"User not logged in\"));\n  }\n  return await logoutRequest(user);\n});\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: getInitialAuthUserState(),\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.user = null;\n      state.isLoading = true;\n      state.error = \"\";\n    }).addCase(register.fulfilled, state => {\n      state.user = null;\n      state.isLoading = false;\n      state.error = \"\";\n    }).addCase(register.rejected, state => {\n      state.user = null;\n      state.isLoading = false;\n      state.error = \"Could not register\";\n    });\n    builder.addCase(login.pending, state => {\n      state.user = null;\n      state.isLoading = true;\n      state.error = \"\";\n    }).addCase(login.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.isLoading = false;\n      state.error = \"\";\n    }).addCase(login.rejected, state => {\n      state.user = null;\n      state.isLoading = false;\n      state.error = \"Username or password may be incorrect\";\n    });\n    builder.addCase(logout.pending, state => {\n      state.isLoading = true;\n      state.error = \"\";\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n      state.isLoading = false;\n      state.error = \"\";\n    }).addCase(logout.rejected, state => {\n      state.user = null;\n      state.isLoading = false;\n      state.error = \"Unable to logout\";\n    });\n  }\n});\nconst authReducer = authSlice.reducer;\nexport { register, login, logout };\nexport default authReducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","loginRequest","getInitialAuthUserState","authUserState","user","isLoading","error","localStorage","getItem","JSON","parse","register","registerDetails","registerRequest","login","loginDetails","logout","_","getState","auth","Promise","reject","Error","logoutRequest","authSlice","name","initialState","reducers","extraReducers","builder","addCase","pending","state","fulfilled","rejected","action","payload","authReducer","reducer"],"sources":["/Users/aryanchadha/Desktop/sp25-cs411-team059-MongoKings/frontend/src/services/Auth/AuthSlice.ts"],"sourcesContent":["import {\n  ActionReducerMapBuilder,\n  createAsyncThunk,\n  createSlice,\n} from \"@reduxjs/toolkit\";\nimport User from \"../../types/Authentication/User\";\nimport LoginInput from \"../../types/Authentication/LoginInput\";\nimport { loginRequest } from \"./AuthRequests\";\nimport { RootState } from \"../../app/store\";\nimport RegisterInput from \"../../types/Authentication/RegisterInput\";\n\ninterface AuthUserState {\n  user: User | null;\n  isLoading: boolean;\n  error: string;\n}\n\nfunction getInitialAuthUserState(): AuthUserState {\n  const authUserState: AuthUserState = {\n    user: null,\n    isLoading: false,\n    error: \"\",\n  };\n  if (localStorage.getItem(\"user\")) {\n    authUserState.user = JSON.parse(localStorage.getItem(\"user\") || \"\");\n  }\n  return authUserState;\n}\n\nconst register = createAsyncThunk<string, RegisterInput>(\n  \"user/register\",\n  async (registerDetails: RegisterInput) => {\n    return await registerRequest(registerDetails);\n  }\n);\n\nconst login = createAsyncThunk<User, LoginInput>(\n  \"user/login\",\n  async (loginDetails: LoginInput) => {\n    return await loginRequest(loginDetails);\n  }\n);\nconst logout = createAsyncThunk<string, undefined, { state: RootState }>(\n  \"user/logout\",\n  async (_, { getState }) => {\n    const user = getState().auth.user;\n    if (!user) {\n      return Promise.reject(new Error(\"User not logged in\"));\n    }\n    return await logoutRequest(user);\n  }\n);\n\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: getInitialAuthUserState(),\n  reducers: {},\n  extraReducers: (builder: ActionReducerMapBuilder<AuthUserState>) => {\n    builder\n      .addCase(register.pending, (state) => {\n        state.user = null;\n        state.isLoading = true;\n        state.error = \"\";\n      })\n      .addCase(register.fulfilled, (state) => {\n        state.user = null;\n        state.isLoading = false;\n        state.error = \"\";\n      })\n      .addCase(register.rejected, (state) => {\n        state.user = null;\n        state.isLoading = false;\n        state.error = \"Could not register\";\n      });\n    builder\n      .addCase(login.pending, (state) => {\n        state.user = null;\n        state.isLoading = true;\n        state.error = \"\";\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.isLoading = false;\n        state.error = \"\";\n      })\n      .addCase(login.rejected, (state) => {\n        state.user = null;\n        state.isLoading = false;\n        state.error = \"Username or password may be incorrect\";\n      });\n    builder\n      .addCase(logout.pending, (state) => {\n        state.isLoading = true;\n        state.error = \"\";\n      })\n      .addCase(logout.fulfilled, (state) => {\n        state.user = null;\n        state.isLoading = false;\n        state.error = \"\";\n      })\n      .addCase(logout.rejected, (state) => {\n        state.user = null;\n        state.isLoading = false;\n        state.error = \"Unable to logout\";\n      });\n  },\n});\n\nconst authReducer = authSlice.reducer;\n\nexport { register, login, logout };\nexport default authReducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}