{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nfunction getInitialCarState() {\n  const carState = {\n    cars: [],\n    isLoading: false,\n    error: \"\"\n  };\n  return carState;\n}\nconst getCars = createAsyncThunk(\"car/fetch\", async () => {\n  const response = await fetch(\"/api/cars\");\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch cars\");\n  }\n  return await response.json();\n});\nconst carSlice = createSlice({\n  name: \"car\",\n  initialState: getInitialCarState(),\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getCars.pending, state => {\n      state.isLoading = true;\n      state.error = \"\";\n    }).addCase(getCars.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.cars = action.payload;\n    }).addCase(getCars.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message || \"Failed to fetch cars\";\n    });\n  }\n});\nexport const carReducer = carSlice.reducer;\nexport { getCars };\nexport default carReducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getInitialCarState","carState","cars","isLoading","error","getCars","response","fetch","ok","Error","json","carSlice","name","initialState","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","carReducer","reducer"],"sources":["/Users/aryanchadha/Desktop/sp25-cs411-team059-MongoKings/frontend/src/services/Car/CarSlice.ts"],"sourcesContent":["import { ActionReducerMapBuilder, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport Car from \"../../types/Car/Car\";\n\ninterface CarState {\n    cars: Car[];\n    isLoading: boolean;\n    error: string;\n}\n\nfunction getInitialCarState(): CarState {\n    const carState: CarState = {\n        cars: [],\n        isLoading: false,\n        error: \"\",\n    };\n    return carState;\n}\n\nconst getCars = createAsyncThunk<Car[], undefined>(\n    \"car/fetch\",\n    async () => {\n        const response = await fetch(\"/api/cars\");\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch cars\");\n        }\n        return await response.json();\n    }\n);\n\nconst carSlice = createSlice({\n    name: \"car\",\n    initialState: getInitialCarState(),\n    reducers: {},\n    extraReducers: (builder: ActionReducerMapBuilder<CarState>) => {\n        builder\n            .addCase(getCars.pending, (state) => {\n                state.isLoading = true;\n                state.error = \"\";\n            })\n            .addCase(getCars.fulfilled, (state, action) => {\n                state.isLoading = false;\n                state.cars = action.payload;\n            })\n            .addCase(getCars.rejected, (state, action) => {\n                state.isLoading = false;\n                state.error = action.error.message || \"Failed to fetch cars\";\n            });\n    },\n});\n\nexport const carReducer = carSlice.reducer;\n\nexport { getCars }\nexport default carReducer;"],"mappings":"AAAA,SAAkCA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AASzF,SAASC,kBAAkBA,CAAA,EAAa;EACpC,MAAMC,QAAkB,GAAG;IACvBC,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE;EACX,CAAC;EACD,OAAOH,QAAQ;AACnB;AAEA,MAAMI,OAAO,GAAGP,gBAAgB,CAC5B,WAAW,EACX,YAAY;EACR,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,CAAC;EACzC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EAC3C;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAChC,CACJ,CAAC;AAED,MAAMC,QAAQ,GAAGZ,WAAW,CAAC;EACzBa,IAAI,EAAE,KAAK;EACXC,YAAY,EAAEb,kBAAkB,CAAC,CAAC;EAClCc,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAA0C,IAAK;IAC3DA,OAAO,CACFC,OAAO,CAACZ,OAAO,CAACa,OAAO,EAAGC,KAAK,IAAK;MACjCA,KAAK,CAAChB,SAAS,GAAG,IAAI;MACtBgB,KAAK,CAACf,KAAK,GAAG,EAAE;IACpB,CAAC,CAAC,CACDa,OAAO,CAACZ,OAAO,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3CF,KAAK,CAAChB,SAAS,GAAG,KAAK;MACvBgB,KAAK,CAACjB,IAAI,GAAGmB,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACZ,OAAO,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC1CF,KAAK,CAAChB,SAAS,GAAG,KAAK;MACvBgB,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACjB,KAAK,CAACoB,OAAO,IAAI,sBAAsB;IAChE,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGd,QAAQ,CAACe,OAAO;AAE1C,SAASrB,OAAO;AAChB,eAAeoB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}