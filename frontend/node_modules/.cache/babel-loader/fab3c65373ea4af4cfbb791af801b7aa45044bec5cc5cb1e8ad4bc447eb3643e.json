{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { loginRequest } from \"./AuthRequests\";\nfunction getInitialAuthUserState() {\n  const authUserState = {\n    user: null,\n    isLoading: false,\n    error: \"\"\n  };\n  if (localStorage.getItem(\"user\")) {\n    authUserState.user = JSON.parse(localStorage.getItem(\"user\") || \"\");\n  }\n  return authUserState;\n}\nconst login = createAsyncThunk(\"user/login\", async loginDetails => {\n  return await loginRequest(loginDetails);\n});\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: getInitialAuthUserState(),\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.user = null;\n      state.isLoading = true;\n      state.error = \"\";\n    }).addCase(login.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.isLoading = false;\n      state.error = \"\";\n    }).addCase(login.rejected, state => {\n      state.user = null;\n      state.isLoading = false;\n      state.error = \"Username or password may be incorrect\";\n    });\n  }\n});\nconst authReducer = authSlice.reducer;\nexport { login };\nexport default authReducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","loginRequest","getInitialAuthUserState","authUserState","user","isLoading","error","localStorage","getItem","JSON","parse","login","loginDetails","authSlice","name","initialState","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","authReducer","reducer"],"sources":["/Users/aryanchadha/Desktop/sp25-cs411-team059-MongoKings/frontend/src/services/Auth/AuthSlice.ts"],"sourcesContent":["import {\n  ActionReducerMapBuilder,\n  createAsyncThunk,\n  createSlice,\n} from \"@reduxjs/toolkit\";\nimport User from \"../../types/Authentication/User\";\nimport LoginInput from \"../../types/Authentication/LoginInput\";\nimport { loginRequest } from \"./AuthRequests\";\nimport { RootState } from \"../../app/store\";\nimport RegisterInput from \"../../types/Authentication/RegisterInput\";\n\ninterface AuthUserState {\n  user: User | null;\n  isLoading: boolean;\n  error: string;\n}\n\nfunction getInitialAuthUserState(): AuthUserState {\n  const authUserState: AuthUserState = {\n    user: null,\n    isLoading: false,\n    error: \"\",\n  };\n  if (localStorage.getItem(\"user\")) {\n    authUserState.user = JSON.parse(localStorage.getItem(\"user\") || \"\");\n  }\n  return authUserState;\n}\n\n\nconst login = createAsyncThunk<User, LoginInput>(\n  \"user/login\",\n  async (loginDetails: LoginInput) => {\n    return await loginRequest(loginDetails);\n  }\n);\n\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: getInitialAuthUserState(),\n  reducers: {},\n  extraReducers: (builder: ActionReducerMapBuilder<AuthUserState>) => {\n    builder\n      .addCase(login.pending, (state) => {\n        state.user = null;\n        state.isLoading = true;\n        state.error = \"\";\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.isLoading = false;\n        state.error = \"\";\n      })\n      .addCase(login.rejected, (state) => {\n        state.user = null;\n        state.isLoading = false;\n        state.error = \"Username or password may be incorrect\";\n      });\n  },\n});\n\nconst authReducer = authSlice.reducer;\n\nexport {  login };\nexport default authReducer;\n"],"mappings":"AAAA,SAEEA,gBAAgB,EAChBC,WAAW,QACN,kBAAkB;AAGzB,SAASC,YAAY,QAAQ,gBAAgB;AAU7C,SAASC,uBAAuBA,CAAA,EAAkB;EAChD,MAAMC,aAA4B,GAAG;IACnCC,IAAI,EAAE,IAAI;IACVC,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE;EACT,CAAC;EACD,IAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;IAChCL,aAAa,CAACC,IAAI,GAAGK,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACrE;EACA,OAAOL,aAAa;AACtB;AAGA,MAAMQ,KAAK,GAAGZ,gBAAgB,CAC5B,YAAY,EACZ,MAAOa,YAAwB,IAAK;EAClC,OAAO,MAAMX,YAAY,CAACW,YAAY,CAAC;AACzC,CACF,CAAC;AAED,MAAMC,SAAS,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEb,uBAAuB,CAAC,CAAC;EACvCc,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAA+C,IAAK;IAClEA,OAAO,CACJC,OAAO,CAACR,KAAK,CAACS,OAAO,EAAGC,KAAK,IAAK;MACjCA,KAAK,CAACjB,IAAI,GAAG,IAAI;MACjBiB,KAAK,CAAChB,SAAS,GAAG,IAAI;MACtBgB,KAAK,CAACf,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC,CACDa,OAAO,CAACR,KAAK,CAACW,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3CF,KAAK,CAACjB,IAAI,GAAGmB,MAAM,CAACC,OAAO;MAC3BH,KAAK,CAAChB,SAAS,GAAG,KAAK;MACvBgB,KAAK,CAACf,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC,CACDa,OAAO,CAACR,KAAK,CAACc,QAAQ,EAAGJ,KAAK,IAAK;MAClCA,KAAK,CAACjB,IAAI,GAAG,IAAI;MACjBiB,KAAK,CAAChB,SAAS,GAAG,KAAK;MACvBgB,KAAK,CAACf,KAAK,GAAG,uCAAuC;IACvD,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,MAAMoB,WAAW,GAAGb,SAAS,CAACc,OAAO;AAErC,SAAUhB,KAAK;AACf,eAAee,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}